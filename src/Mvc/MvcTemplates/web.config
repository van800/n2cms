<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" requirePermission="false" restartOnExternalChanges="true" />
    <sectionGroup name="n2" type="N2.Configuration.SectionGroup, N2">
      <section name="host" type="N2.Configuration.HostSection, N2" requirePermission="false" restartOnExternalChanges="true" />
      <section name="engine" type="N2.Configuration.EngineSection, N2" requirePermission="false" restartOnExternalChanges="true" />
      <section name="database" type="N2.Configuration.DatabaseSection, N2" requirePermission="false" restartOnExternalChanges="true" />
      <section name="edit" type="N2.Configuration.EditSection, N2" requirePermission="false" restartOnExternalChanges="true" />
      <section name="templates" type="N2.Templates.Mvc.Configuration.TemplatesSection, N2.Templates.Mvc" requirePermission="false" />
    </sectionGroup>
    <sectionGroup name="dotNetOpenAuth" type="DotNetOpenAuth.Configuration.DotNetOpenAuthSection, DotNetOpenAuth.Core">
      <section name="messaging" type="DotNetOpenAuth.Configuration.MessagingElement, DotNetOpenAuth.Core" requirePermission="false" allowLocation="true" />
      <section name="reporting" type="DotNetOpenAuth.Configuration.ReportingElement, DotNetOpenAuth.Core" requirePermission="false" allowLocation="true" />
      <section name="openid" type="DotNetOpenAuth.Configuration.OpenIdElement, DotNetOpenAuth.OpenId" requirePermission="false" allowLocation="true" />
      <section name="oauth" type="DotNetOpenAuth.Configuration.OAuthElement, DotNetOpenAuth.OAuth" requirePermission="false" allowLocation="true" />
    </sectionGroup>
  </configSections>
  <connectionStrings>
    <!-- Please not that you need to configure another database and remove \bin\system.data.sqlite.dll for MEDIUM TRUST -->
    <add name="N2CMS" connectionString="Data Source=|DataDirectory|\n2.sqlite.db;Version=3;New=True;" providerName="System.Data.SQLite" />
    <!-- Some connection string examples
    SQLite:            <add name="N2CMS" connectionString="Data Source=|DataDirectory|\n2.sqlite.db;Version=3;New=True;" providerName="System.Data.SQLite" />
    SQL Server (windows auth):  <add name="N2CMS" connectionString="Data Source=localhost;Database=N2;Integrated Security=SSPI"/>
    SQL Server (db login):    <add name="N2CMS" connectionString="Data Source=localhost;Database=N2;User Id=N2;Password=SqlPassword2000;" providerName="System.Data.SqlClient"/>
    SQL Express:        <add name="N2CMS" connectionString="Data Source=.\SQLEXPRESS;AttachDbFilename=|DataDirectory|\N2.mdf;Integrated Security=True;User Instance=True" providerName="System.Data.SqlClient"/>
    MySQL:            <add name="N2CMS" connectionString="Data Source=MySQLServer;Database=MySQLDatabase;User Id=MySQLUser;Password=MySQLPassword;" providerName="MySql.Data.MySqlClient"/>
    SQL Compact 4:        <add name="N2CMS" connectionString="Data Source=|DataDirectory|\n2cms.sdf" providerName="System.Data.SqlServerCe.SqlCeEngine, System.Data.SqlServerCe"/>
    -->
  </connectionStrings>
  <n2 xmlns="http://n2cms.com/schemas/configuration/v3">
    <!-- If you install a database from scratch you'll need to insert some required pages. 
      This can be done by the web based installer located at http://yoursite/n2/installation/ -->
    <host configSource="App_Data\n2_host.config" />
    <engine>
      <!-- Update email to receive error reports -->
      <errors action="Email" mailTo="" mailFrom="noreply@yourdomain.com" />
      <!-- Globalization requires you to create additional start pages with a language -->
      <globalization enabled="true" />
    </engine>
    <!-- Other flavours: SqlServer2005, SqlServer2000, MySql, SqLite, SqlCe, Firebird -->
    <database connectionStringName="N2CMS" flavour="AutoDetect" caching="true">
      <!--<files storageLocation="Database"/>-->
    </database>
    <edit>
      <!-- Set checkInstallationStatus to false to disable redirect to install page -->
      <installer checkInstallationStatus="true" />
      <writers dynamic="true" />
      <editors dynamic="true" />
      <administrators dynamic="true" />
      <images>
        <sizes>
          <add name="thumb" width="60" height="40" mode="Fill" />
          <add name="wide" width="960" height="480" mode="Fill" />
        </sizes>
      </images>
    </edit>
  </n2>
  <log4net configSource="N2\log4net.config" />
  <!--
    For a description of web.config changes for .NET 4.5 see http://go.microsoft.com/fwlink/?LinkId=235367.

    The following attributes can be set on the <httpRuntime> tag.
      <system.Web>
        <httpRuntime targetFramework="4.5" />
      </system.Web>
  -->
  <system.web>
    <sessionState mode="InProc" />
    <!--<globalization culture="auto"/>-->
    <!--<globalization culture="nl-NL" uiCulture="nl-NL"></globalization>-->
    <!--<trust level="Medium" originUrl=""/>-->
    <!--Uncomment for .NET 4 <httpRuntime requestValidationMode="2.0"/>-->
    <compilation debug="true" targetFramework="4.5">
      <!--optimizeCompilations="true">-->
      <assemblies>
        <add assembly="System.Web.Mvc, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.Abstractions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.Routing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Data.Linq, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />
      </assemblies>
      <expressionBuilders>
        <add expressionPrefix="CurrentItem" type="N2.Web.Compilation.CurrentItemExpressionBuilder, N2" />
        <add expressionPrefix="CurrentPage" type="N2.Web.Compilation.CurrentPageExpressionBuilder, N2" />
        <add expressionPrefix="StartPage" type="N2.Web.Compilation.StartPageExpressionBuilder, N2" />
        <add expressionPrefix="Code" type="N2.Web.Compilation.CodeExpressionBuilder, N2" />
        <add expressionPrefix="HasValue" type="N2.Web.Compilation.HasValueExpressionBuilder, N2" />
      </expressionBuilders>
    </compilation>
    <!--
            The <authentication> section enables configuration 
            of the security authentication mode used by 
            ASP.NET to identify an incoming user. 
    -->
    <authentication mode="Forms">
      <forms loginUrl="n2/login.aspx" protection="All" timeout="30000" path="/">
        <credentials passwordFormat="Clear">
          <!-- WARNING: Change this default password. Please do it now. -->
          <user name="admin" password="changeme" />
        </credentials>
      </forms>
    </authentication>
    <customErrors mode="RemoteOnly" defaultRedirect="~/Start/ServerError">
      <!-- Consider padding oracle exploit before uncommenting <error  statusCode="404" redirect="~/Start/NotFound"/>-->
    </customErrors>
    <!-- These membership and role providers store their data as content items. 
         You can also use the forms authentication credentials only (then remove 
         these sections) or the default ASP.NET providers (search for asp.net membership) -->
    <membership defaultProvider="ContentMembershipProvider">
      <providers>
        <clear />
        <add name="ContentMembershipProvider" type="N2.Security.ContentMembershipProvider, N2.Management" passwordFormat="Hashed" />
      </providers>
    </membership>
    <roleManager enabled="true" defaultProvider="ContentRoleProvider">
      <providers>
        <clear />
        <add name="ContentRoleProvider" type="N2.Security.ContentRoleProvider, N2.Management" />
      </providers>
    </roleManager>
    <profile defaultProvider="ContentProfileProvider">
      <providers>
        <clear />
        <add name="ContentProfileProvider" type="N2.Security.ContentProfileProvider, N2.Management" />
      </providers>
    </profile>
    <pages enableViewState="false" controlRenderingCompatibilityVersion="4.0" clientIDMode="AutoID">
      <controls>
        <add tagPrefix="n2" namespace="N2.Web.UI.WebControls" assembly="N2" />
      </controls>
      <namespaces>
        <add namespace="System.Web.Mvc" />
        <add namespace="System.Web.Mvc.Ajax" />
        <add namespace="System.Web.Mvc.Html" />
        <add namespace="System.Web.Routing" />
        <add namespace="System.Linq" />
        <add namespace="System.Collections.Generic" />
        <add namespace="N2.Templates.Mvc" />
        <add namespace="N2.Templates.Mvc.Models.Parts" />
        <add namespace="N2.Templates.Mvc.Models.Pages" />
        <add namespace="N2.Templates.Mvc.Models" />
        <add namespace="N2.Templates.Mvc.Controllers" />
        <add namespace="N2.Web.Mvc.Html" />
      </namespaces>
    </pages>
    <siteMap defaultProvider="PublicSiteMap">
      <providers>
        <add name="PublicSiteMap" type="N2.Web.PublicSiteMapProvider, N2" startPageIsRoot="true" />
      </providers>
    </siteMap>
    <httpHandlers>
      <add verb="*" path="*.mvc" validate="false" type="System.Web.Mvc.MvcHttpHandler, System.Web.Mvc, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
      <add path="WebResource.axd" verb="GET" type="System.Web.Handlers.AssemblyResourceLoader" />
    </httpHandlers>
    <httpModules>
      <add name="n2.initializer" type="N2.Web.InitializerModule, N2" />
    </httpModules>
  </system.web>
  <appSettings />
  <!-- 
        The system.webServer section is required for running ASP.NET AJAX under Internet
        Information Services 7.0.  It is not necessary for previous version of IIS.
  -->
  <system.webServer>
    <validation validateIntegratedModeConfiguration="false" />
    <modules runAllManagedModulesForAllRequests="true">
      <add name="n2.initializer" type="N2.Web.InitializerModule, N2" />
    </modules>
    <handlers>
      <remove name="MvcHttpHandler" />
      <remove name="UrlRoutingHandler" />
      <add name="MvcHttpHandler" preCondition="integratedMode" verb="*" path="*.mvc" type="System.Web.Mvc.MvcHttpHandler, System.Web.Mvc, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
    </handlers>
  </system.webServer>
  <system.net>
    <mailSettings>
      <smtp from="info@mysite.com">
        <network host="smtprelay1.telia.com" />
      </smtp>
    </mailSettings>
    <defaultProxy enabled="true" />
    <settings>
      <!-- This setting causes .NET to check certificate revocation lists (CRL) 
			     before trusting HTTPS certificates.  But this setting tends to not 
			     be allowed in shared hosting environments. -->
      <!--<servicePointManager checkCertificateRevocationList="true"/>-->
    </settings>
  </system.net>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31BF3856AD364E35" culture="neutral" />
        <bindingRedirect oldVersion="1.0.0.0" newVersion="2.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.0.0" newVersion="4.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="DotNetOpenAuth.AspNet" publicKeyToken="2780ccd10d57b246" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.1.0.0" newVersion="4.1.0.0" />
      </dependentAssembly>
    </assemblyBinding>
    <!-- This prevents the Windows Event Log from frequently logging that HMAC1 is being used (when the other party needs it). -->
    <legacyHMACWarning enabled="0" />
    <!-- When targeting ASP.NET MVC 3, this assemblyBinding makes MVC 1 and 2 references relink
		     to MVC 3 so libraries such as DotNetOpenAuth that compile against MVC 1 will work with it.
		<assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
			<dependentAssembly>
				<assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
				<bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
			</dependentAssembly>
		</assemblyBinding>
		 -->
  </runtime>
  <location path="web.config">
    <system.web>
      <authorization>
        <deny users="*" />
      </authorization>
    </system.web>
  </location>
  <location path="upload">
    <system.webServer>
      <handlers>
        <clear />
        <add name="StaticFile" path="*" verb="*" modules="StaticFileModule,DefaultDocumentModule,DirectoryListingModule" resourceType="Either" requireAccess="Read" />
      </handlers>
    </system.webServer>
  </location>
  <system.diagnostics>
    <trace autoflush="true">
      <listeners>
        <add name="WebPageTraceListener" type="System.Web.WebPageTraceListener, System.Web, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
        <add name="TestTracer" type="System.Diagnostics.TextWriterTraceListener, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" initializeData="n2cms.trace.log" />
      </listeners>
    </trace>
  </system.diagnostics>
  <dotNetOpenAuth>
    <messaging>
      <untrustedWebRequest>
        <whitelistHosts>
          <!-- Uncomment to enable communication with localhost (should generally not activate in production!) -->
          <!--<add name="localhost" />-->
        </whitelistHosts>
      </untrustedWebRequest>
    </messaging>
    <!-- Allow DotNetOpenAuth to publish usage statistics to library authors to improve the library. -->
    <reporting enabled="true" />
    <!-- This is an optional configuration section where aspects of dotnetopenauth can be customized. -->
    <!-- For a complete set of configuration options see http://www.dotnetopenauth.net/developers/code-snippets/configuration-options/ -->
    <openid>
      <relyingParty>
        <security requireSsl="false">
          <!-- Uncomment the trustedProviders tag if your relying party should only accept positive assertions from a closed set of OpenID Providers. -->
          <!--<trustedProviders rejectAssertionsFromUntrustedProviders="true">
						<add endpoint="https://www.google.com/accounts/o8/ud" />
					</trustedProviders>-->
        </security>
        <behaviors>
          <!-- The following OPTIONAL behavior allows RPs to use SREG only, but be compatible
					     with OPs that use Attribute Exchange (in various formats). -->
          <add type="DotNetOpenAuth.OpenId.RelyingParty.Behaviors.AXFetchAsSregTransform, DotNetOpenAuth.OpenId.RelyingParty" />
        </behaviors>
      </relyingParty>
    </openid>
  </dotNetOpenAuth>
  <uri>
    <!-- The uri section is necessary to turn on .NET 3.5 support for IDN (international domain names),
		     which is necessary for OpenID urls with unicode characters in the domain/host name.
		     It is also required to put the Uri class into RFC 3986 escaping mode, which OpenID and OAuth require. -->
    <idn enabled="All" />
    <iriParsing enabled="true" />
  </uri>
</configuration>